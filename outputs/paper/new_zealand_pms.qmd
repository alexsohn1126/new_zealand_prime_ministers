---
title: "Webscraping New Zealand Prime Minister Lifespan Data"
author: 
  - Moohaeng Sohn
thanks: "Code and data are available at: [https://github.com/alexsohn1126/new_zealand_prime_ministers](https://github.com/alexsohn1126/new_zealand_prime_ministers)"
date: today
date-format: long
format: pdf
number-sections: true
bibliography: references.bib
---

```{r}
#| include: false
#| warning: false
#| message: false

library(tidyverse)
library(kableExtra)
library(here)

# read in cleaned data
pm_data <- read.csv(here("outputs/data/cleaned_NZ_PM_data.csv"))
```


# Findings

In New Zealand, prime ministers (also known as PM) are the leader of the political party which has won the largest share of seats forming the government, and stays in the seat as long as the political party keeps the majority [@McLean_2023]. Though earlier in the history of prime ministers, they were given the title "colonial secretary", and later on it was a mix of "premier" and "prime minister"[@McLean_2023]. After 1906, all leaders were assigned the title of prime minister [@McLean_2023]. In this paper, we will include colonial secretaries, and premiers as they served essentially the same role as the prime minister.

@Tbl-pm shows a sample of the final dataset that we were able to scrape from the Wikipedia page which contained a list of all New Zealand Prime Ministers [@NZ_PM_Wiki]. PMs with no death year are still alive. There were 43 prime ministers in New Zealand as of writing this paper, and we have found that 9 past prime ministers of New Zealand are still alive. We also have learned that the shortest living PM was Norman Kirk, dying after living for 51 years. On the other hand, the longest living prime minister is Jim Bolger, who is currently living for 89 years, and is still alive.


@Fig-pm-birth-death-years summarizes the data well. The graph layout was inspired by Rohan Alexander [@tellingstories]. This shows Dame Jacinda Ardern is the prime minister with the latest birth year in our dataset, being born in 1980. Henry Sewell was born in 1807, making Henry Sewell the prime minister with the oldest birth year in our dataset. The latest death of a prime minister occurred in 2020, when Mike Moore died, and Henry Sewell, the first prime minister (called colonial secretary back then), has the oldest death year of 1879.

There doesn't seem to be a clear trend between the prime minister's birth year and years lived by the prime minister. @Fig-pm-birthyear-vs-yearslived shows which prime ministers are dead or alive, and how many years they have lived, or has lived so far in case of the PMs who are still alive. It seems like there is very little correlation between the year of birth and the number of years lived. Even ignoring the currently alive prime ministers does not seem to reveal a clear trend between the birth year and years lived.



```{r}
#| echo: false
#| label: tbl-pm
#| tbl-cap: New Zealand Prime Ministers' Lifespan Data, In the Order of First Day in Office
options(knitr.kable.NA = '')
# Table formatting inspired by https://stackoverflow.com/a/62241264
kable(
  pm_data,
  col.names = c("Prime Minister", "Birth Year", "Death Year", "Years Lived"),
  longtable = TRUE
  ) |>
  kable_styling(latex_options = c("repeat_header"))
```

```{r}
#| echo: false
#| label: fig-pm-birth-death-years
#| fig-cap: New Zealand Prime Ministers' Birth and Death Years
#| fig-height: 7

# Code Inspired by Rohan Alexander (2023)
pm_data |>
  mutate(
    still_alive = if_else(is.na(death_year), "Yes", "No"),
    death_year = if_else(is.na(death_year), as.integer(2024), death_year)
  ) |>
  mutate(prime_minister = as_factor(prime_minister)) |>
  ggplot(
    aes(x = birth_year, xend = death_year, y = prime_minister, yend = prime_minister, color = still_alive)
    ) +
  geom_segment() +
  labs(
    x = "Year of Birth/Death", y = "Prime minister", color = "PM is currently alive"
    ) +
  theme_minimal() +
  scale_color_brewer(palette = "Set1") +
  theme(legend.position = "bottom")
  
```


```{r}
#| echo: false
#| label: fig-pm-birthyear-vs-yearslived
#| fig-cap: New Zealand Prime Ministers' Birth Year Versus Years Lived


pm_data |>
  mutate(
    alive = ifelse(is.na(death_year), "Yes", "No")
  ) |>
  replace_na(list(death_year = 2024)) |>
  mutate(
    years_lived = death_year - birth_year
  ) |>
  # scale_color_manual part inspired by https://stackoverflow.com/a/36013774
  ggplot(aes(x = birth_year, y = years_lived, color = as.factor(alive))) +
  scale_color_manual(values=c("#F8766D","#00BA38"))+
  geom_point(stat="identity") +
  theme_minimal() +
  labs(
    x = "Birth Year",
    y = "Years Alive",
    color = "PM is currently alive"
  )+
  theme(legend.position = "bottom")
  
```


# Data Source

Once we got the HTML data from Wikipedia, we were able to use the rvest [@rvest] package to select the column that we are concerned about. Then, once we got that column, we had to parse the raw string data and convert it into useful data that we want. Using regex and tidyverse [@tidyverse] functions, I was able to extract the information we want from the table that was in the Wikipedia page, and save it as a csv file. There were 2 tables which contained information about New Zealand prime ministers, we had to create 2 tables and then combine them back into one before saving it as a csv file.

The longest part of web scraping was when we were converting raw strings into different data we want. To get the name of each PM, we had to write a regex (regular expression) to match patterns within the string which allowed us to extract the data, but there were many edge cases. We couldn't get the first 2 words of each raw string as a lot of them included "The Honourable" or "The Right Honourable", so we removed them with tidyverse [@tidyverse] functions from every row. But still, getting the first 2 words of the new string meant that PMs with 3 word names such as "Dame Jenny Shipley" would not be correctly selected. We noticed that the last name of a PM was appended by their titles, such as KCMG or GCMG. Therefore we would get whatever comes before the title of those PMs, and that worked decently. It was hard to learn and test these regular expressions as they are not intuitive for people just learning them.

This process became enjoyable when we were able to automate the process of scraping data off of Wikipedia and being able to convert them into a nice csv file in the end with a click of a few buttons. After all the hard work, it was amusing to see whatever was in the Wikipedia page is now in a nicely formatted file, which we can use to analyze and create tables and graphs like we have above.

If we were to do a similar project in the future, we would like to try and make the conversion process going from the raw string into a data table in R easier by making that conversion process a function instead of copy-pasting code and manually changing it like how we did in `02-data_cleaning.R`. This would allow us to not repeat the code, and if there were even more tables, say, 10 tables, we would be able to reuse that function instead of having to copy-paste them 10 times.



\newpage


# References


